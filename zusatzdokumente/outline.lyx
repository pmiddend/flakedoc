#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Titel: Echtzeit-Strömungsmechanik mit OpenCL am Beispiel von Schnee
\end_layout

\begin_layout Subsection
Einleitung
\end_layout

\begin_layout Subsection
Ansätze zur Strömungsmechanik
\end_layout

\begin_layout Subsubsection
Smoothed Particle Hydrodynamics
\end_layout

\begin_layout Itemize
Kurz erklären (vor allem, weil keine gitterbasierte Technik).
\end_layout

\begin_layout Subsubsection
Lattice-Boltzmann-Automaten
\end_layout

\begin_layout Itemize
Kurz erklären, auch warum die nicht benutzt wurde.
\end_layout

\begin_layout Subsubsection
\begin_inset Quotes eld
\end_inset

Stable Fluids
\begin_inset Quotes erd
\end_inset

-Methode nach Stam, J.
\end_layout

\begin_layout Itemize
Kurz erläutern, Details auf später verschieben.
\end_layout

\begin_layout Subsection
Theorie hinter dem gewählen Ansatz
\end_layout

\begin_layout Subsubsection
Mathematische Grundlagen
\end_layout

\begin_layout Itemize
Vektorfeld
\end_layout

\begin_layout Itemize
Gradient
\end_layout

\begin_layout Itemize
Rotation
\end_layout

\begin_layout Itemize
Diskretisierung dieser Operationen auf Gitter
\end_layout

\begin_layout Subsubsection
Navier-Stokes
\end_layout

\begin_layout Itemize
Erklären
\end_layout

\begin_layout Subsection
Umsetzung
\end_layout

\begin_layout Subsubsection
Einführung in OpenCL
\end_layout

\begin_layout Itemize
Kurz Geschichte von OpenCL, aktueller Stand
\end_layout

\begin_layout Itemize
Platformmodell
\end_layout

\begin_layout Itemize
Workgroups
\end_layout

\begin_layout Itemize
Kernel
\end_layout

\begin_layout Itemize
Architektur einer GPU (Warps usw.)
\end_layout

\begin_layout Itemize
Alles anhand von kleineren Beispielen erklären.
\end_layout

\begin_layout Subsubsection
Strömungssimulation im Detail
\end_layout

\begin_layout Itemize
Hier Umsetzung der Operationen erklären
\end_layout

\begin_layout Itemize
Bilder am besten 2D und mit 
\begin_inset Quotes eld
\end_inset

Rauch
\begin_inset Quotes erd
\end_inset

 statt Partikeln, weil besser sichtbar
\end_layout

\begin_layout Itemize
Jacobi
\end_layout

\begin_layout Itemize
Advection
\end_layout

\begin_layout Itemize
Erklären, wieso keine Texturen sondern Buffer (entgegen dem traditionellen
 Ansatz)
\end_layout

\begin_layout Itemize
Erklären, dass alles halbwegs cachefreundlich ist, wo Optimierungen liegen
\end_layout

\begin_layout Itemize
Vorticity Confinement
\end_layout

\begin_layout Itemize
MacCormack advection
\end_layout

\begin_layout Subsubsection
Partikelsystem
\end_layout

\begin_layout Itemize
Hier auch Zusammenarbeit mit OpenGL erwähnen
\end_layout

\begin_layout Itemize
Wie werden Partikel dargestellt (Pointsprites)
\end_layout

\begin_layout Itemize
Wie werden Partikel gespawnt (Pseudozufallspositionen)
\end_layout

\begin_layout Itemize
Wie viele Partikel werden es
\end_layout

\begin_layout Itemize
Wie werden Partikel weiterbewegt
\end_layout

\begin_deeper
\begin_layout Itemize
Wie werden Kollisionen festgestellt
\end_layout

\begin_layout Itemize
Activity, siehe Schneedecke
\end_layout

\begin_layout Itemize
Trägheitsmodell aus dem einen Paper
\end_layout

\end_deeper
\begin_layout Itemize
Diskretisierung von Hindernissen (einfacher Ansatz zu langsam, daher binvox,
 aber Algorithmen kurz erklären)
\end_layout

\begin_layout Subsubsection
Schneedecke
\end_layout

\begin_layout Itemize
Hier Marching-Cubes auf der GPU erklären
\end_layout

\begin_layout Itemize
Dazu vorher Prefixsum erklären
\end_layout

\begin_layout Itemize
Normalen via Gradient
\end_layout

\begin_layout Itemize
Triplanare Texturierung, auch Ansatz mit Volumetexture
\end_layout

\begin_layout Itemize
Activity zur Auftürmung
\end_layout

\begin_layout Subsubsection
Andere Visualisierungsmöglichkeiten
\end_layout

\begin_layout Itemize
Hier noch Rauch erwähnen (Raycasting)
\end_layout

\begin_layout Itemize
Wasser via Marching Cubes
\end_layout

\end_body
\end_document
